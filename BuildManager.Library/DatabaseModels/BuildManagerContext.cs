// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using BuildManager.Library.DatabaseModels;
using Microsoft.EntityFrameworkCore;

namespace BuildManager.Library.DatabaseModels;

public partial class BuildManagerContext : DbContext
{
    public BuildManagerContext(DbContextOptions<BuildManagerContext> options)
        : base(options)
    {
        Database.EnsureCreated();
    }

    public virtual DbSet<SetList> SetList { get; set; }

    public virtual DbSet<SetUsableItemSlots> SetUsableItemSlots { get; set; }

    public virtual DbSet<Skill> Skill { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<SetList>(entity =>
        {
            entity.HasKey(e => e.SetId);

            entity.ToTable("SetList");

            entity.Property(e => e.SetId).ValueGeneratedNever();
            entity.Property(e => e.SetBonusDescription).IsUnicode(false);
            entity.Property(e => e.SetName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Sources)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.alias).IsUnicode(false);
        });

        modelBuilder.Entity<SetUsableItemSlots>(entity =>
        {
            entity.HasKey(e => e.SetUsableItemSlotsId);

            entity.ToTable("SetUsableItemSlots");

            entity.HasOne(d => d.Set).WithMany(p => p.SetUsableItemSlots)
                .HasForeignKey(d => d.SetId)
                .HasConstraintName("FK__SetUsable__SetId__3C69FB99");
        });

        modelBuilder.Entity<Skill>(entity =>
        {
            entity.HasKey(e => e.SkillId);
            entity.ToTable("Skill");
        });
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}